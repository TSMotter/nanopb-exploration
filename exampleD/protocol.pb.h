/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_PROTOCOL_PB_H_INCLUDED
#define PB_PROTOCOL_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Batch
{
    pb_callback_t items;
} Batch;

typedef struct _Batch_Sample
{
    pb_callback_t name;
    uint32_t      frequency;
    double        time;
    double        value;
} Batch_Sample;


#ifdef __cplusplus
extern "C"
{
#endif

/* Initializer values for message structs */
#define Batch_init_default \
    {                      \
        {                  \
            {NULL}, NULL   \
        }                  \
    }
#define Batch_Sample_init_default \
    {                             \
        {{NULL}, NULL}, 0, 0, 0   \
    }
#define Batch_init_zero  \
    {                    \
        {                \
            {NULL}, NULL \
        }                \
    }
#define Batch_Sample_init_zero  \
    {                           \
        {{NULL}, NULL}, 0, 0, 0 \
    }

/* Field tags (for use in manual encoding/decoding) */
#define Batch_items_tag 1
#define Batch_Sample_name_tag 2
#define Batch_Sample_frequency_tag 3
#define Batch_Sample_time_tag 4
#define Batch_Sample_value_tag 5

/* Struct field encoding specification for nanopb */
#define Batch_FIELDLIST(X, a) X(a, CALLBACK, REPEATED, MESSAGE, items, 1)
#define Batch_CALLBACK pb_default_field_callback
#define Batch_DEFAULT NULL
#define Batch_items_MSGTYPE Batch_Sample

#define Batch_Sample_FIELDLIST(X, a)             \
    X(a, CALLBACK, SINGULAR, STRING, name, 2)    \
    X(a, STATIC, SINGULAR, UINT32, frequency, 3) \
    X(a, STATIC, SINGULAR, DOUBLE, time, 4)      \
    X(a, STATIC, SINGULAR, DOUBLE, value, 5)
#define Batch_Sample_CALLBACK pb_default_field_callback
#define Batch_Sample_DEFAULT NULL

    extern const pb_msgdesc_t Batch_msg;
    extern const pb_msgdesc_t Batch_Sample_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Batch_fields &Batch_msg
#define Batch_Sample_fields &Batch_Sample_msg

    /* Maximum encoded size of messages (where known) */
    /* Batch_size depends on runtime parameters */
    /* Batch_Sample_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
